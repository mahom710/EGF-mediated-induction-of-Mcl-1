getwd()
getywd()
getwd()
list.files()
list.files()
suppressMessages(library(tidyverse))
suppressMessages(library(knitr))
counts <- read.csv("data/GSE60450_GeneLevel_NormalizedCPM.and_.TMM_data.csv")
sampleinfo <- read.csv("data/GSE60450_filtered_metadata-1.csv")
colnames(counts)[1] <- "genID"
counts[1:5,1:6] #wide data #col is what you are pivoting
seqdata <- pivot_longer(counts, col = starts_with("GSM"), names_to = "Sample", values_to = "Count")   #long data
seqdata[1:10,]
allinfo <- full_join(seqdata, sampleinfo, by = c("Sample" = "X"))
head(allinfo)
ggplot(data = allinfo, mapping = aes(x = Sample, y = log2(Count + 1))) + geom_boxplot()
ggplot(data = allinfo, mapping = aes(x = Sample, y = log2(Count + 1))) + geom_violin()
ggplot(data = allinfo, mapping = aes(x = Sample, weight = log2(Count + 1), fill = Sample)) + geom_bar()
ggplot(data = allinfo, mapping = aes(x = log2(Count+1))) + geom_density()
ggplot(data = allinfo, mapping = aes(x = log2(Count+1), color = Sample)) + geom_density()
allinfo <- mutate(allinfo, Group = case_when(
str_detect(characteristics, "basal.*virgin") ~ "bvirg",
str_detect(characteristics, "basal.*preg") ~ "bpreg",
str_detect(characteristics, "basal.*lact") ~ "blact",
str_detect(characteristics, "luminal.*virgin") ~ "lvirg",
str_detect(characteristics, "luminal.*preg") ~ "lpreg",
str_detect(characteristics, "luminal.*lact") ~ "llact"
))
mygenes <- allinfo %>%
group_by(gene_symbol) %>%
summarise(Total_count = sum(Count)) %>%
arrange(desc(Total_count)) %>%
head(n = 8) %>%
pull(gene_symbol)
mygenes <- c("Csn1s2a", "Csn1s1", "Csn2", "Glycam1", "COX1", "Trf", "Wap", "Eef1a1")
mygenes_counts <- filter(allinfo, gene_symbol %in% mygenes)
mygenes_counts
ggplot(mygenes_counts, mapping = aes(x = Group, y = log2(Count+1), colour = Group)) + geom_boxplot()
ggplot(mygenes_counts, mapping = aes(x = Group, y = log2(Count+1), colour = Group)) + geom_jitter() + facet_wrap(~ gene_symbol)
ggplot(mygenes_counts, mapping = aes(x = Group, y = log2(Count+1), colour = Group))+
geom_jitter()+
facet_wrap(~ gene_symbol)+
labs(x = "Cell Type and Stage", y = "Count (log scaled reads)", title = "Mammary Gland RNA-seq Data")+
theme(axis.text.x = element_text(angle = 45))+
theme_bw()
mcl1_index <- which(allinfo$gene_symbol == "Mcl1")
mcl1 <- allinfo[mcl1_index,]
ggplot(data = mcl1, mapping = aes(x = Group, weight = Count, fill = Group)) + geom_bar()
ggplot(data = mcl1[1:6,], mapping = aes(x = Group, weight = Count, fill = Group)) + geom_bar()
head(counts) #wide data #col is what you are pivoting
seqdata <- pivot_longer(counts, col = starts_with("GSM"), names_to = "Sample", values_to = "Count")   #long data
head(seqdata)
head(construction)
head(counts)
pivot_longer(counts, col = starts_with("GSM"), names_to = "Sample", values_to = "Counts")
head(counts)
head(sampleinfo)
allinfo <- mutate(allinfo, Group = case_when(
str_detect(characteristics, "basal.*virgin") ~ "bvirg",
str_detect(characteristics, "basal.*preg") ~ "bpreg",
str_detect(characteristics, "basal.*lact") ~ "blact",
str_detect(characteristics, "luminal.*virgin") ~ "lvirg",
str_detect(characteristics, "luminal.*preg") ~ "lpreg",
str_detect(characteristics, "luminal.*lact") ~ "llact"
))
allinfo <- mutate(allinfo, Group = case_when(
str_detect(characteristics, "basal.*virgin") ~ "bvirg",
str_detect(characteristics, "basal.*preg") ~ "bpreg",
str_detect(characteristics, "basal.*lact") ~ "blact",
str_detect(characteristics, "luminal.*virgin") ~ "lvirg",
str_detect(characteristics, "luminal.*preg") ~ "lpreg",
str_detect(characteristics, "luminal.*lact") ~ "llact"
))
had(allinfo)
allinfo <- mutate(allinfo, Group = case_when(
str_detect(characteristics, "basal.*virgin") ~ "bvirg",
str_detect(characteristics, "basal.*preg") ~ "bpreg",
str_detect(characteristics, "basal.*lact") ~ "blact",
str_detect(characteristics, "luminal.*virgin") ~ "lvirg",
str_detect(characteristics, "luminal.*preg") ~ "lpreg",
str_detect(characteristics, "luminal.*lact") ~ "llact"
))
head(allinfo)
mygenes
names(allinfo)
head(allinfo
)
allinfo$gene_symbol == mygenes
allinfo$gene_symbol %in% mygenes
allinfo[allinfo$gene_symbol %in% mygenes]
allinfo$gene_symbol %in% mygenes
temp = allinfo$gene_symbol %in% mygenes
allinfo[temp]
temp
allinfo
1:10
bruh = 1:10
bruh
bruh %in% 1:5
bruhbruh = bruh %in% 1:5
bruh[bruhbruh]
temp
allinfo
allinfo[temp,]
ggplot(mygenes_counts, mapping = aes(x = Group, y = log2(Count+1), colour = Group))+
geom_jitter()+
facet_wrap(~ gene_symbol)+
labs(x = "Cell Type and Stage", y = "Count (log scaled reads)", title = "Mammary Gland RNA-seq Data")+
theme(axis.text.x = element_text(angle = 45))+
theme_bw()
suppressMessages(library(tidyverse))
suppressMessages(library(knitr))
counts <- read.csv("data/GSE60450_GeneLevel_NormalizedCPM.and_.TMM_data.csv")
sampleinfo <- read.csv("data/GSE60450_filtered_metadata-1.csv")
colnames(counts)[1] <- "genID"
head(counts) #wide data #col is what you are pivoting
seqdata <- pivot_longer(counts, col = starts_with("GSM"), names_to = "Sample", values_to = "Count")   #long data
head(seqdata)
allinfo <- full_join(seqdata, sampleinfo, by = c("Sample" = "X"))
head(allinfo)
ggplot(data = allinfo, mapping = aes(x = Sample, y = log2(Count + 1))) + geom_boxplot()
ggplot(data = allinfo, mapping = aes(x = Sample, y = log2(Count + 1))) + geom_violin()
ggplot(data = allinfo, mapping = aes(x = Sample, weight = log2(Count + 1), fill = Sample)) + geom_bar() + theme(axis.text.x = element_text(angle = 90))
ggplot(data = allinfo, mapping = aes(x = log2(Count+1), color = Sample)) + geom_density()
allinfo <- mutate(allinfo, Group = case_when(
str_detect(characteristics, "basal.*virgin") ~ "Bas.Virg.",
str_detect(characteristics, "basal.*preg") ~ "Bas.Preg.",
str_detect(characteristics, "basal.*lact") ~ "Bas.Lact.",
str_detect(characteristics, "luminal.*virgin") ~ "Lum.Virg.",
str_detect(characteristics, "luminal.*preg") ~ "Lum.Preg.",
str_detect(characteristics, "luminal.*lact") ~ "Lum.Lact."
))
head(allinfo)
mygenes <- allinfo %>%
group_by(gene_symbol) %>%
summarise(Total_count = sum(Count)) %>%
arrange(desc(Total_count)) %>%
head(n = 8) %>%
pull(gene_symbol)
mygenes <- c("Csn1s2a", "Csn1s1", "Csn2", "Glycam1", "COX1", "Trf", "Wap", "Eef1a1")
mygenes_counts <- filter(allinfo, gene_symbol %in% mygenes)
mygenes_counts
ggplot(mygenes_counts, mapping = aes(x = Group, y = log2(Count+1), colour = Group)) + geom_boxplot()
ggplot(mygenes_counts, mapping = aes(x = Group, y = log2(Count+1), colour = Group))+
geom_jitter()+
facet_wrap(~ gene_symbol)+
labs(x = "Cell Type and Stage", y = "Count (log scaled reads)", title = "Mammary Gland RNA-seq Data")+
theme(axis.text.x = element_text(angle = 45))+
theme_bw()
mcl1_index <- which(allinfo$gene_symbol == "Mcl1")
mcl1 <- allinfo[mcl1_index,]
ggplot(data = mcl1, mapping = aes(x = Group, weight = Count, fill = Group)) + geom_bar()
ggplot(data = mcl1[1:6,], mapping = aes(x = Group, weight = Count, fill = Group)) + geom_bar()
ggplot(mygenes_counts, mapping = aes(x = Group, y = log2(Count+1), colour = Group))+
geom_jitter()+
facet_wrap(~ gene_symbol)+
labs(x = "Cell Type and Stage", y = "Count (log scaled reads)", title = "Mammary Gland RNA-seq Data")+
theme(axis.text.x = element_text(angle = 90))+
theme_bw()
ggplot(mygenes_counts, mapping = aes(x = Group, y = log2(Count+1), colour = Group))+
geom_jitter()+
facet_wrap(~ gene_symbol)+
labs(x = "Cell Type and Stage", y = "Count (log scaled reads)", title = "Mammary Gland RNA-seq Data")+
theme(axis.text.x = element_text(angle = 90))+
ggplot(mygenes_counts, mapping = aes(x = Group, y = log2(Count+1), colour = Group))+
geom_jitter()+
facet_wrap(~ gene_symbol)+
labs(x = "Cell Type and Stage", y = "Count (log scaled reads)", title = "Mammary Gland RNA-seq Data")+
theme(axis.text.x = element_text(angle = 90))
ggplot(mygenes_counts, mapping = aes(x = Group, y = log2(Count+1), colour = Group))+
geom_bar()+
facet_wrap(~ gene_symbol)+
labs(x = "Cell Type and Stage", y = "Count (log scaled reads)", title = "Mammary Gland RNA-seq Data")+
theme(axis.text.x = element_text(angle = 90))
ggplot(mygenes_counts, mapping = aes(x = Group, weight = log2(Count+1), colour = Group))+
geom_bar()+
facet_wrap(~ gene_symbol)+
labs(x = "Cell Type and Stage", y = "Count (log scaled reads)", title = "Mammary Gland RNA-seq Data")+
theme(axis.text.x = element_text(angle = 90))
ggplot(mygenes_counts, mapping = aes(x = Group, weight = log2(Count+1), fill = Group))+
geom_bar()+
facet_wrap(~ gene_symbol)+
labs(x = "Cell Type and Stage", y = "Count (log scaled reads)", title = "Mammary Gland RNA-seq Data")+
theme(axis.text.x = element_text(angle = 90))
ggplot(mygenes_counts, mapping = aes(x = Group, y = log2(Count+1), colour = Group))+
geom_jitter()+
facet_wrap(~ gene_symbol)+
labs(x = "Cell Type and Stage", y = "Count (log scaled reads)", title = "Mammary Gland RNA-seq Data")+
theme(axis.text.x = element_text(angle = 90))
ggplot(mygenes_counts, mapping = aes(x = Group, weight = log2(Count+1), fill = Group))+
stat_summary(fun = "mean", geom = "bar")+
facet_wrap(~ gene_symbol)+
labs(x = "Cell Type and Stage", y = "Count (log scaled reads)", title = "Mammary Gland RNA-seq Data")+
theme(axis.text.x = element_text(angle = 90))
ggplot(mygenes_counts, mapping = aes(x = Group, y = log2(Count+1), fill = Group))+
stat_summary(fun = "mean", geom = "bar")+
facet_wrap(~ gene_symbol)+
labs(x = "Cell Type and Stage", y = "Count (log scaled reads)", title = "Mammary Gland RNA-seq Data")+
theme(axis.text.x = element_text(angle = 90))
ggplot(mygenes_counts, mapping = aes(x = Group, y = log2(Count+1), fill = Group))+
stat_summary(fun = "mean", geom = "bar")+
facet_wrap(~ gene_symbol)+
labs(x = "Cell Type and Stage", y = "Count (log scaled reads)", title = "Average Mammary Gland RNA-seq Counts")+
theme(axis.text.x = element_text(angle = 90))
ggplot(mygenes_counts, mapping = aes(x = Group, y = log2(Count+1), colour = Group)) + geom_boxplot()
group_order <- c("Bas.Virg.", "Bas.Preg.", "Bas.Lact.", "Lum.Virg.", "Lum.Preg.", "Lum.Lact")
group_order
View(mygenes_counts)
group_order <- c("Bas.Virg.", "Bas.Preg.", "Bas.Lact.", "Lum.Virg.", "Lum.Preg.", "Lum.Lact")
mygenes_counts <- mutate(mygenes_counts, Group_f = factor(Group, levels_order))
group_order <- c("Bas.Virg.", "Bas.Preg.", "Bas.Lact.", "Lum.Virg.", "Lum.Preg.", "Lum.Lact")
mygenes_counts <- mutate(mygenes_counts, Group_f = factor(Group, levels = levels_order))
group_order <- c("Bas.Virg.", "Bas.Preg.", "Bas.Lact.", "Lum.Virg.", "Lum.Preg.", "Lum.Lact")
mygenes_counts <- mutate(mygenes_counts, Group_f = factor(Group, levels = group_order))
head(mygenes_counts)
View(mygenes_counts)
group_order <- c("Bas.Virg.", "Bas.Preg.", "Bas.Lact.", "Lum.Virg.", "Lum.Preg.", "Lum.Lact.")
mygenes_counts <- mutate(mygenes_counts, Group_f = factor(Group, levels = group_order))
head(mygenes_counts)
ggplot(mygenes_counts, mapping = aes(x = Group_f, y = log2(Count+1), colour = Group_f)) + geom_boxplot()
ggplot(mygenes_counts, mapping = aes(x = Group_f, y = log2(Count+1), colour = Group_f))+
geom_jitter()+
facet_wrap(~ gene_symbol)+
labs(x = "Cell Type and Stage", y = "Count (log scaled reads)", title = "Mammary Gland RNA-seq Data")+
theme(axis.text.x = element_text(angle = 90))
mcl1_index <- which(allinfo$gene_symbol == "Mcl1")
mcl1 <- allinfo[mcl1_index,]
ggplot(data = mcl1, mapping = aes(x = Group_f, weight = Count, fill = Group_f)) + geom_bar()
mcl1_index <- which(allinfo$gene_symbol == "Mcl1")
mcl1 <- allinfo[mcl1_index,]
ggplot(data = mcl1, mapping = aes(x = Group_f, weight = Count, fill = Group_f)) + geom_bar()
View(mygenes_counts)
mcl1_index <- which(allinfo$gene_symbol == "Mcl1")
mcl1 <- allinfo[mcl1_index,]
View(mcl1)
mcl1_index <- which(allinfo$gene_symbol == "Mcl1")
mcl1 <- allinfo[mcl1_index,]
mcl1 <- mutate(mcl1, Group_f = factor(Group, levels = group_order))
head(mcl1)
mcl1_index <- which(allinfo$gene_symbol == "Mcl1")
mcl1 <- allinfo[mcl1_index,]
mcl1 <- mutate(mcl1, Group_f = factor(Group, levels = group_order))
ggplot(data = mcl1, mapping = aes(x = Group_f, weight = Count, fill = Group_f)) + geom_bar()
mcl1_index <- which(allinfo$gene_symbol == "Mcl1")
mcl1 <- allinfo[mcl1_index,]
mcl1 <- mutate(mcl1, Group_f = factor(Group, levels = group_order))
ggplot(data = mcl1, mapping = aes(x = Group_f, weight = Count, fill = Group_f)) + stat_summary(fun = "mean", geom = "bar")
mcl1_index <- which(allinfo$gene_symbol == "Mcl1")
mcl1 <- allinfo[mcl1_index,]
mcl1 <- mutate(mcl1, Group_f = factor(Group, levels = group_order))
ggplot(data = mcl1, mapping = aes(x = Group_f, y = Count, fill = Group_f)) + stat_summary(fun = "mean", geom = "bar")
ggplot(data = mcl1[1:6,], mapping = aes(x = Group, weight = Count, fill = Group)) + geom_bar()
View(counts)
View(mcl1)
mcl1_index <- which(allinfo$gene_symbol == "Mcl1")
mcl1 <- allinfo[mcl1_index,]
mcl1 <- mutate(mcl1, Group_f = factor(Group, levels = group_order))
suppressMessages(library(tidyverse))
suppressMessages(library(knitr))
mcl1_index <- which(allinfo$gene_symbol == "Mcl1")
mcl1 <- allinfo[mcl1_index,]
mcl1 <- mutate(mcl1, Group_f = factor(Group, levels = group_order))
ggplot(data = mcl1, mapping = aes(x = Group_f, y = log2(Count+1), fill = Group_f)) + stat_summary(fun = "mean", geom = "bar")
#ggplot(data - mcl1, mapping = aes(x = Group_f, y = Count))
mcl1_index <- which(allinfo$gene_symbol == "Mcl1")
mcl1 <- allinfo[mcl1_index,]
mcl1 <- mutate(mcl1, Group_f = factor(Group, levels = group_order))
ggplot(data = mcl1, mapping = aes(x = Group_f, y = Count, fill = Group_f)) + stat_summary(fun = "mean", geom = "bar")
#ggplot(data - mcl1, mapping = aes(x = Group_f, y = Count))
mcl1_index <- which(allinfo$gene_symbol == "Mcl1")
mcl1 <- allinfo[mcl1_index,]
mcl1 <- mutate(mcl1, Group_f = factor(Group, levels = group_order))
ggplot(data = mcl1, mapping = aes(x = Group_f, y = Count, fill = Group_f)) + stat_summary(fun = "mean", geom = "bar")
ggplot(data - mcl1, mapping = aes(x = Group_f, y = Count, colour = Group_f)) + geom_jitter()
mcl1_index <- which(allinfo$gene_symbol == "Mcl1")
mcl1 <- allinfo[mcl1_index,]
mcl1 <- mutate(mcl1, Group_f = factor(Group, levels = group_order))
ggplot(data = mcl1, mapping = aes(x = Group_f, y = Count, fill = Group_f)) + stat_summary(fun = "mean", geom = "bar")
ggplot(data = mcl1, mapping = aes(x = Group_f, y = Count, colour = Group_f)) + geom_jitter()
getwd()
getwd()
}
before <- c(3.2, 3.5, 3.4, 3.1, 2.9, 3.3, 3.0, 3.2, 3.6, 3.1)
after <- c(3.5, 3.7, 3.6, 3.3, 3.1, 3.6, 3.2, 3.4, 3.8, 3.3)
before
after[1]
before <- c(3.2, 3.5, 3.4, 3.1, 2.9, 3.3, 3.0, 3.2, 3.6, 3.1) + 5
after <- c(3.5, 3.7, 3.6, 3.3, 3.1, 3.6, 3.2, 3.4, 3.8, 3.3) + 5
before
before <- c(3.2, 3.5, 3.4, 3.1, 2.9, 3.3, 3.0, 3.2, 3.6, 3.1) + 5
after <- c(3.5, 3.7, 3.6, 3.3, 3.1, 3.6, 3.2, 3.4, 3.8, 3.3) + 5
result <- t.test(before, after, paired = TRUE)
result
mean(before)
mean(after)
a <- c(45, 48, 50, 43, 47, 44, 49, 46, 48, 42, 51, 47, 44, 49, 45)
b <- c(40, 42, 38, 41, 43, 39, 42, 44, 41, 40, 42, 38, 41, 43, 39)
result <- t.test(a, b, paired = TRUE)
result
mean(a)
mean(b)
result
a <- c(45, 48, 50, 43, 47, 44, 49, 46, 48, 42, 51, 47, 44, 49, 45)
b <- c(40, 42, 38, 41, 43, 39, 42, 44, 41, 40, 42, 38, 41, 43, 39)
result <- t.test(a, b, alternative = "greater")
result
rep(1:3, each = 12)
data <- data.frame(group = rep(1:3, each = 12), time = c(group_1, group_2, group_3))
data <- data.frame(group = rep(1:3, each = 12), time = c(group1, group2, group3))
group1 <- c(10, 12, 11, 13, 10, 11, 12, 13, 11, 12, 10, 13)
group2 <- c(9, 10, 11, 9, 12, 10, 11, 9, 10, 12, 11, 9)
group3 <- c(8, 7, 9, 8, 8, 9, 7, 8, 9, 8, 7, 9)
data <- data.frame(group = rep(1:3, each = 12), time = c(group1, group2, group3))
data
group_1 <- c(10, 12, 11, 13, 10, 11, 12, 13, 11, 12, 10, 13)
group_2 <- c(9, 10, 11, 9, 12, 10, 11, 9, 10, 12, 11, 9)
group_3 <- c(8, 7, 9, 8, 8, 9, 7, 8, 9, 8, 7, 9)
data <- data.frame(group = rep(1:3, each = 12), time = c(group_1, group_2, group_3))
result <- aov(time ~ group, data = data)
result
summary(result)
result
summary(result)
before_cleaning <- c(25, 28, 23, 26, 27, 24, 29, 26, 28, 22, 25, 27, 23, 24, 26)
after_cleaning <- c(28, 31, 26, 29, 30, 27, 32, 29, 31, 25, 28, 30, 26, 27, 29)
result <- t.test(before_cleaning, after_cleaning, paired = TRUE)
before_cleaning <- c(25, 28, 23, 26, 27, 24, 29, 26, 28, 22, 25, 27, 23, 24, 26)
after_cleaning <- c(28, 31, 26, 29, 30, 27, 32, 29, 31, 25, 28, 30, 26, 27, 29)
before_cleaning
after_cleaning
mean(after_cleaning)
mean(before_cleaning)
result <- t.test(before_cleaning, after_cleaning, paired = TRUE)
sd(before_cleaning)
sd(after_cleaning)
before_cleaning <- c(25, 28, 23, 26, 27, 24, 29, 26, 28, 22, 25, 27, 23, 24, 26)
after_cleaning <- c(28, 31, 26, 29, 30, 27, 32, 29, 31, 25, 28, 30, 26, 27, 29)
# Assuming your data is stored in variables before_cleaning and after_cleaning
result <- t.test(before_cleaning, after_cleaning, alternative = "two.sided", var.equal = FALSE)
print(result)
before_cleaning <- c(25, 28, 23, 26, 27, 24, 29, 26, 28, 22, 25, 27, 23, 24, 26)
after_cleaning <- c(28, 31, 26, 29, 30, 27, 32, 29, 31, 25, 28, 30, 26, 27, 29)
result <- t.test(before_cleaning, after_cleaning)
print(result)
result <- t.test(before_cleaning, after_cleaning)
result
group_1 <- c(10, 12, 11, 13, 10, 11, 12, 13, 11, 12, 10, 13)
group_2 <- c(9, 10, 11, 9, 12, 10, 11, 9, 10, 12, 11, 9)
group_3 <- c(8, 7, 9, 8, 8, 9, 7, 8, 9, 8, 7, 9)
data <- data.frame(group = rep(1:3, each = 12), time = c(group_1, group_2, group_3))
result <- aov(time ~ group, data = data)
result
before_cleaning <- c(25, 28, 23, 26, 27, 24, 29, 26, 28, 22, 25, 27, 23, 24, 26)
after_cleaning <- c(28, 31, 26, 29, 30, 27, 32, 29, 31, 25, 28, 30, 26, 27, 29)
result <- t.test(before_cleaning, after_cleaning)
print(result)
